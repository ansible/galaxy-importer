{
    "metadata": {
        "namespace": "jerabekjiri",
        "name": "ansible_patterns",
        "version": "1.0.0",
        "license": [
            "GPL-2.0-or-later"
        ],
        "description": "your collection description",
        "repository": "http://example.com/repository",
        "documentation": "http://docs.example.com",
        "homepage": "http://example.com",
        "issues": "http://example.com/issue/tracker",
        "authors": [
            "your name <example@domain.com>"
        ],
        "tags": [],
        "license_file": null,
        "readme": "README.md",
        "dependencies": {}
    },
    "docs_blob": {
        "collection_readme": {
            "name": "README.md",
            "html": "<h1>Ansible Collection - jerabekjiri.ansible_patterns</h1>\n<h2>Specifications:</h2>\n<pre><code>- A pattern MUST be contained within a single directory in the /extensions/patterns/ directory of an Ansible collection.\n- An Ansible pattern directory name MUST contain only &lt;specify character requirements&gt;\nAn Ansible collection MAY contain zero or more patterns.\n</code></pre>\n<h3>Required files</h3>\n<h4>meta/pattern.json</h4>\n<pre><code>- A pattern MUST include exactly one meta file defining the pattern metadata and AAP resources it requires.\n- The pattern definition meta file MUST be a valid instance of the Ansible pattern schema.\n</code></pre>\n<h4>README.md</h4>\n<pre><code>- A pattern MUST include a README file.\n</code></pre>\n<h4>playbooks/</h4>\n<pre><code>- A pattern MUST contain a playbooks/ directory.\n- The playbooks directory MUST contain at least one playbook.\n- A pattern MAY contain multiple playbooks. \n    - If a pattern contains multiple playbooks, it MUST define a primary playbook in its setup file.\n- All required and optional input variables to a pattern playbook MUST be defined in a play argument spec following the documented play argument spec format (draft).\n- If a pattern playbook requires any user-provided information other than variables to launch as a job template, such as inventory or credentials, those MUST be specified as fields_required_at_launch in the relevant controller_job_templates section of the pattern definition meta file.\n</code></pre>\n<h4>execution_environments/</h4>\n<pre><code>- A pattern MAY contain an executions_environments/ directory.\n- If included, the execution_environments/ directory MUST contain exactly one execution environment definition file following the documented format.\n- The execution environment definition file MUST include all dependencies needed to execute the pattern automation(s). This includes system, Python, and Ansible collection dependencies.\n</code></pre>\n<h3>Optional files</h3>\n<h4>templates/</h4>\n<pre><code>- A pattern MAY contain a templates/ directory to hold templates specific to catalogs that may publish the pattern, such as Red Hat Developer Hub or ServiceNow.\n- The templates directory MAY contain one or more catalog template files.\n</code></pre>\n<h3>Other requirements</h3>\n<pre><code>- A pattern MUST inherit the version number of the collection that contains it.\n- A pattern MUST be valid according to the requirements specified in this document, including validation of each file contained in the pattern against its relevant schema.\n- How/where is testing represented? Do we require any amount of testing of a pattern or just validation that the pattern meets the spec?\n</code></pre>"
        },
        "documentation_files": [],
        "contents": [
            {
                "content_name": "patterns.network.backup.README.md",
                "content_type": "patterns",
                "doc_strings": {},
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "patterns.network.backup.setup.yml",
                "content_type": "patterns",
                "doc_strings": {},
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "patterns.network.backup.execution_environments.execution-environment.yml",
                "content_type": "patterns/execution-environments",
                "doc_strings": {},
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "patterns.network.backup.meta.pattern.json",
                "content_type": "patterns/meta",
                "doc_strings": {},
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "patterns.network.backup.playbooks.backup.yml",
                "content_type": "patterns/playbooks",
                "doc_strings": {},
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "patterns.network.backup.playbooks.meta.backup.yaml",
                "content_type": "patterns/playbooks",
                "doc_strings": {},
                "readme_file": null,
                "readme_html": null
            },
            {
                "content_name": "patterns.network.backup.templates.rhdh.yml",
                "content_type": "patterns/templates",
                "doc_strings": {},
                "readme_file": null,
                "readme_html": null
            }
        ]
    },
    "contents": [
        {
            "name": "patterns.network.backup.README.md",
            "content_type": "patterns",
            "description": null
        },
        {
            "name": "patterns.network.backup.setup.yml",
            "content_type": "patterns",
            "description": null
        },
        {
            "name": "patterns.network.backup.execution_environments.execution-environment.yml",
            "content_type": "patterns/execution-environments",
            "description": null
        },
        {
            "name": "patterns.network.backup.meta.pattern.json",
            "content_type": "patterns/meta",
            "description": null
        },
        {
            "name": "patterns.network.backup.playbooks.backup.yml",
            "content_type": "patterns/playbooks",
            "description": null
        },
        {
            "name": "patterns.network.backup.playbooks.meta.backup.yaml",
            "content_type": "patterns/playbooks",
            "description": null
        },
        {
            "name": "patterns.network.backup.templates.rhdh.yml",
            "content_type": "patterns/templates",
            "description": null
        }
    ],
    "custom_license": null,
    "requires_ansible": ">=2.15.0",
    "patterns": [
        {
            "schema_version": "1.0",
            "name": "network.backup",
            "title": "Configure network backup",
            "description": "This pattern is designed to help...",
            "short_description": "This pattern is designed...",
            "tags": [
                "aws",
                "cloud"
            ],
            "aap_resources": {
                "controller_project": {
                    "name": "Project for network.backup",
                    "description": "Project for the network.backup",
                    "scm_type": "git",
                    "scm_url": "https://github.com/jerabekjiri/foo.bar/"
                },
                "controller_execution_environment": {
                    "name": "Controller EE for network.backup",
                    "description": "EE for the backup.network",
                    "image": "cloud/aws_ops-ee",
                    "pull": "missing"
                },
                "controller_labels": [
                    "aws",
                    "cloud"
                ],
                "controller_job_templates": [
                    {
                        "name": "Controller JT for network.backup",
                        "description": "This job template for network.backup",
                        "execution_environment": "Network.backup instance",
                        "playbook": "create_ec2_instance.yml",
                        "fields_required_at_launch": [
                            "credential",
                            "inventory",
                            "verbosity"
                        ],
                        "labels": [
                            "aws",
                            "cloud"
                        ],
                        "survey": {
                            "name": "Survey network.backup Instance",
                            "description": "Survey to network.backup instance",
                            "spec": [
                                {
                                    "type": "text",
                                    "question_name": "AWS Region",
                                    "question_description": "AWS region where resources should be created",
                                    "variable": "aws_region",
                                    "required": true
                                },
                                {
                                    "type": "text",
                                    "question_name": "Instance Name",
                                    "question_description": "Name of EC2 instance to create",
                                    "variable": "instance_name",
                                    "required": true
                                },
                                {
                                    "type": "text",
                                    "question_name": "Instance Type",
                                    "question_description": "Type of EC2 instance to create (e.g., t2.micro, m5.large)",
                                    "variable": "instance_type",
                                    "required": true
                                }
                            ]
                        }
                    }
                ]
            }
        }
    ]
}