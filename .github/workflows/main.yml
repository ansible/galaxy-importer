name: CI

# Events that trigger workflow
on:
  pull_request:
  push:
    branches:
      - '**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-[a-z]+.[0-9]+'

# Jobs can run sequentially or in parallel
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8']

    steps:
    - name: Checkout pull request HEAD commit instead of merge commit
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check pull request commits for issue references
      if: github.event_name == 'pull_request'
      env:
        GITHUB_PR_COMMITS_URL: ${{ github.event.pull_request.commits_url }}
      run: |
        sh .github/scripts/check_commit.sh

    - name: Install source package and dependencies
      run: |
        python -m pip install -e .[dev]

    - name: Lint with flake8
      run: |
        flake8 .

    - name: Pytest unit tests
      run: |
        make test

    - name: Integration test
      run: |
        make test/integration


  publish:
    name: Build and publish to PyPI registry
    if: startsWith(github.ref, 'refs/tags')
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: pip install build
      run: |
        python -m pip install build --user

    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/ .

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_token }}
